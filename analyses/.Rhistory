#simple$Jvar2<-ifelse(simple$sp=="4", simple$Jvar2-0.1, simple$Jvar2)
#simple$Jvar2<-ifelse(simple$sp=="8", simple$Jvar2-0.2, simple$Jvar2)
simple$Estimate<-ifelse(simple$var=="photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="chill", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:chill", -simple$Estimate, simple$Estimate)
species<-unique(simple$sp)
simple$est2<-simple$Estimate
for(i in c(1:length(species))) {
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:photo", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="photo" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:photo" & simple$sp==species[i]], simple$Estimate)
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:chill", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="chill" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:chill" & simple$sp==species[i]], simple$est2)
}
#simple$est3<-simple$est2+23.71
estimates<-rev(estimates)
cols <- colorRampPalette(brewer.pal(9,"Set3"))(9)
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=simple$sp,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
quartz()
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
cols <- colorRampPalette(brewer.pal(9,"Spectral"))(9)
View(simple)
simple$spp<-(as.numeric(simple$sp)-1)
simple$spp<-ifelse(simple$spp>1, simple$spp*0.05, 0)
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
simple$spp<-(as.numeric(simple$sp)-1)
simple$spp<-ifelse(simple$spp>1, (simple$spp*0.05) + 0.05, 0)
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
simple$spp<-(as.numeric(simple$sp)-1)
simple$spp<-ifelse(simple$spp>1, (simple$spp*0.05) - 0.05, 0)
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
simple$Estimate<-ifelse(simple$var=="photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="chill", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:chill", -simple$Estimate, simple$Estimate)
species<-unique(simple$sp)
simple$est2<-simple$Estimate
for(i in c(1:length(species))) {
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:photo", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="photo" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:photo" & simple$sp==species[i]], simple$Estimate)
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:chill", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="chill" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:chill" & simple$sp==species[i]], simple$est2)
}
simple<-subset(dfwide, select=c("sp", "var", "Estimate"))
#simple<-simple[(simple$sp=="1"|simple$sp=="4"|simple$sp=="8"),]
#simple$sp<-ifelse(simple$sp=="4", "1", "9")
simple<-simple[!(simple$sp=="0"),]
simple<-simple[!(simple$var=="photo:chill1" | simple$var=="photo:chill2" | simple$var=="force:chill1"
| simple$var=="chill1"),]
simple$var<-ifelse(simple$var=="chill2", "chill", as.character(simple$var))
simple$var<-ifelse(simple$var=="force:chill2", "force:chill", as.character(simple$var))
estimates<-c("More Forcing", "Shorter Photoperiod", "Less Chilling", "More Forcing and \nShorter Photoperiod",
"More Forcing and \nLess Chilling")
#pd <- position_dodgev(height = -0.5)
#simple$Jvar <- ave(as.numeric(simple$var), simple$var,
#                         FUN = function(x) x + rnorm(length(x), sd = .1))
simple$Jvar<-NA
simple$Jvar<-ifelse(simple$var=="force", 5, simple$var)
simple$Jvar<-ifelse(simple$var=="photo", 4, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="chill", 3, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:photo", 2, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:chill", 1, simple$Jvar)
simple$Jvar2<-as.numeric(simple$Jvar)
simple$spp<-(as.numeric(simple$sp)-1)
simple$spp<-ifelse(simple$spp>1, (simple$spp*0.05) - 0.05, 0)
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
#simple$Jvar2<-ifelse(simple$sp=="4", simple$Jvar2-0.1, simple$Jvar2)
#simple$Jvar2<-ifelse(simple$sp=="8", simple$Jvar2-0.2, simple$Jvar2)
simple$Estimate<-ifelse(simple$var=="photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="chill", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:chill", -simple$Estimate, simple$Estimate)
species<-unique(simple$sp)
simple$est2<-simple$Estimate
for(i in c(1:length(species))) {
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:photo", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="photo" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:photo" & simple$sp==species[i]], simple$Estimate)
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:chill", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="chill" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:chill" & simple$sp==species[i]], simple$est2)
}
estimates<-rev(estimates)
cols <- colorRampPalette(brewer.pal(9,"Spectral"))(9)
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -6.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -5.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -6.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -5.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5)) +
theme_linedraw(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -6.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -5.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) +
theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -6.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -5.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme_linedraw() +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -10.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -9.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme_linedraw() +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -10.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme_linedraw() +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -15.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -15.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme_linedraw() +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -12.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = -12.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme_linedraw() +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + coord_cartesian(ylim=c(1,5))
exp
rm(list=ls())
options(stringsAsFactors = FALSE)
# dostan = TRUE
library(rstan)
library(ggplot2)
library(shinystan)
#library(bayesplot)
library(rstanarm)
library(brms)
library(ggstance)
#library(forcats)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("danflynn", getwd())>0)) {
setwd("~/Documents/git/ospree")
} else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses")
if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses")
} else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses")
setwd("~/Documents/git/ospree/analyses")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
########################
#### get the data
source("lat_analysis/source/bbdataplease.R")
## (2) Deal with species
dim(bb.noNA)
d <- bb.noNA
source("lat_analysis/source/speciescomplex.R")
bb.noNA.wtaxa <- d
dim(bb.noNA.wtaxa)
unique(bb.noNA.wtaxa$complex)
# merge in labgroup (we could do this elsewhere someday)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>2)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
bb.wlab<-bb.wlab.photo
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
studies<-dplyr::select(bb.wlab, datasetID, complex)
studies<-studies[!duplicated(studies),]
studies<-within(studies, { studies <- ave(datasetID, complex, FUN=function(x) length(unique(x)))})
studies<-dplyr::select(studies, -datasetID)
studies<-studies[!duplicated(studies),]
columnstokeep <- c("datasetID", "genus", "species", "varetc", "woody", "forcetemp",
"photoperiod_day", "response", "response.time", "Total_Utah_Model",
"complex", "provenance.lat")
bb.wlab.sm <- subset(bb.wlab, select=columnstokeep)
## make a bunch of things numeric (eek!)
bb.wlab.sm$force <- as.numeric(bb.wlab.sm$forcetemp)
bb.wlab.sm$photo <- as.numeric(bb.wlab.sm$photoperiod_day)
bb.wlab.sm$chill <- as.numeric(bb.wlab.sm$Total_Utah_Model)
bb.wlab.sm$resp <- as.numeric(bb.wlab.sm$response.time)
bb.wlab.sm$lat<-as.numeric(bb.wlab.sm$provenance.lat)
## subsetting data, preparing genus variable, removing NAs
ospr.prepdata <- subset(bb.wlab.sm, select=c("resp", "chill", "photo", "force", "complex", "lat", "datasetID"))
dim(subset(bb.wlab.sm, is.na(chill)==FALSE & is.na(photo)==FALSE & is.na(force)==FALSE
& is.na(lat)==FALSE & is.na(datasetID)==FALSE))
ospr.stan <- ospr.prepdata[complete.cases(ospr.prepdata),]
ospr.stan$sp <- as.numeric(as.factor(ospr.stan$complex))
## Center? or Z-score?
ospr.stan$sm.chill<-ospr.stan$chill/240
## center the predictors:
#ospr.stan$force.cen <- ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.cen <- ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.cen <- ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.cen <- ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE)
## z-score the predictors:
#ospr.stan$force.z <- (ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE))/sd(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.z <- (ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE))/sd(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.z <- (ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE))/sd(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.z <- (ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE))/sd(ospr.stan$lat,na.rm=TRUE)
ospr.stan <- subset(ospr.stan, resp<600)
cp<-ggplot(ospr.stan, aes(x=chill, y=photo)) + geom_point(aes(col=as.factor(complex))) +
facet_wrap(~complex) + theme(legend.position = "none")
fp<-ggplot(ospr.stan, aes(x=force, y=photo)) + geom_point(aes(col=as.factor(complex))) +
facet_wrap(~complex) + theme(legend.position = "none")
cf<-ggplot(ospr.stan, aes(x=chill, y=force)) + geom_point(aes(col=as.factor(complex))) +
facet_wrap(~complex) + theme(legend.position = "none")
lf<-ggplot(ospr.stan, aes(x=lat, y=force)) + geom_point(aes(col=as.factor(complex))) +
facet_wrap(~complex) + theme(legend.position = "none")
pl<-ggplot(ospr.stan, aes(x=lat, y=photo)) + geom_point(aes(col=as.factor(complex))) +
facet_wrap(~complex) + theme(legend.position = "none")
cl<-ggplot(ospr.stan, aes(x=lat, y=chill)) + geom_point(aes(col=as.factor(complex))) +
facet_wrap(~complex) + theme(legend.position = "none")
cp
quartz()
fp
quartz()
cf
quartz()
lf
quartz()
pl
quartz()
cl
lat.brm<-brm(resp~ force + photo + sm.chill + lat + photo:lat +
(force + photo + sm.chill + lat + photo:lat|sp), data=ospr.stan, warmup=2500,iter=4000,
chains = 2, cores = 4,control = list(max_treedepth = 12,adapt_delta = 0.99))
lat.brm
## Take 2: February 2017! ##
## Take 3: July 2017! ## Nacho's clean code to run stan models on Ospree
############################################
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
library(ggplot2)
library(brms)
setwd("~/Documents/git/ospree/analyses")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
########################
#### get the data
source("lat_analysis/source/bbdataplease.R")
## (2) Deal with species
dim(bb.noNA)
d <- bb.noNA
source("lat_analysis/source/speciescomplex.R")
bb.noNA.wtaxa <- d
dim(bb.noNA.wtaxa)
unique(bb.noNA.wtaxa$complex)
# merge in labgroup (we could do this elsewhere someday)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>2)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
bb.wlab<-bb.wlab.photo
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum", "Ulmus_complex")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
studies<-dplyr::select(bb.wlab, datasetID, complex)
studies<-studies[!duplicated(studies),]
studies<-within(studies, { studies <- ave(datasetID, complex, FUN=function(x) length(unique(x)))})
studies<-dplyr::select(studies, -datasetID)
studies<-studies[!duplicated(studies),]
columnstokeep <- c("datasetID", "genus", "species", "varetc", "woody", "forcetemp",
"photoperiod_day", "response", "response.time", "Total_Utah_Model",
"complex", "provenance.lat")
bb.wlab.sm <- subset(bb.wlab, select=columnstokeep)
## make a bunch of things numeric (eek!)
bb.wlab.sm$force <- as.numeric(bb.wlab.sm$forcetemp)
bb.wlab.sm$photo <- as.numeric(bb.wlab.sm$photoperiod_day)
bb.wlab.sm$chill <- as.numeric(bb.wlab.sm$Total_Utah_Model)
bb.wlab.sm$resp <- as.numeric(bb.wlab.sm$response.time)
bb.wlab.sm$lat<-as.numeric(bb.wlab.sm$provenance.lat)
## subsetting data, preparing genus variable, removing NAs
ospr.prepdata <- subset(bb.wlab.sm, select=c("resp", "chill", "photo", "force", "complex", "lat", "datasetID"))
dim(subset(bb.wlab.sm, is.na(chill)==FALSE & is.na(photo)==FALSE & is.na(force)==FALSE
& is.na(lat)==FALSE & is.na(datasetID)==FALSE))
ospr.stan <- ospr.prepdata[complete.cases(ospr.prepdata),]
ospr.stan$sp <- as.numeric(as.factor(ospr.stan$complex))
## Center? or Z-score?
ospr.stan$sm.chill<-ospr.stan$chill/240
ospr.stan <- subset(ospr.stan, resp<600)
lat.inter_brm<-brm(resp~ force + photo + sm.chill + lat + photo:lat + force:photo + force:sm.chill +
photo:sm.chill + force:lat +
(force + photo + sm.chill + lat + photo:lat + force:photo + force:sm.chill +
photo:sm.chill + force:lat|sp), data=ospr.stan)
lat.inter_brm
