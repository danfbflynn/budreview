## to start
rm(list=ls())
options(stringsAsFactors=FALSE)
## load packages
packs.to.extract<-list('raster','foreach')
lapply(packs.to.extract,require, character.only=T)
## Get data. Here it is simulated it but can be read/imported as usually
# dat<-read.csv("XXX.csv")
dat=as.data.frame(matrix(rnorm(10000),ncol=100))
colnames(dat)<-c("y",paste("X",seq(1,9,1),sep=""))
write.csv(dat, file="~/Desktop/dat.csv")
## Get data. Here it is simulated it but can be read/imported as usually
dat<-read.csv("/n/wolkovich_lab/Lab/Cat/dat.csv")
#generate nested list to store model results
storing<-list()
## looping
for (i in 2:100){
storing[[i]]<-list()
for (j in 2:100){
print(paste(i,j,sep="."))
if(i<j){
mod.1<-lm(y~dat[,i]+dat[,j],data=dat)
storing[[i]][[j]]<-mod.1
}
}
}
## generate table summarizing some results
coeffs<-array(NA,dim=c(98,3))
for(i in 1:98){
coeffs[i,]<-storing[[2]][3:100][[i]]$coefficients
}
## saving results to memory
#save.image()
write.csv(coeffs, "/n/wolkovich_lab/Lab/Cat/some.coefficients.csv")
## I am fairly simple file for testing ##
library("car")
## I am fairly simple file for testing ##
#library("car")
x <- c(1,2,3,4)
y <- c(2,4,6,11)
foo <- anova(lm(x~y))
save(foo, file = "foo.RData")
load("/private/var/folders/24/gxkvcqyd525_zhq0nyldzv6c0000gn/T/fz3temp-2/foo.RData")
View(foo)
brm.simple
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv")
bb.stan<-subset(bb.stan, select=c("fs.count", "m.index", "sp.temp", "cc", "sm.elev"))
bb.stan<-bb.stan[!duplicated(bb.stan),]
bb.stan<-na.omit(bb.stan)
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv")
bb.stan<-subset(bb.stan, select=c("fs.count", "m.index", "sp.temp", "cc", "sm.elev", "species"))
bb.stan<-bb.stan[!duplicated(bb.stan),]
bb.stan<-na.omit(bb.stan)
brm.full.nointer
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv")
bb.stan<-subset(bb.stan, select=c("fs.count", "m.index", "sp.temp", "cc", "sm.elev","space", "species"))
bb.stan<-bb.stan[!duplicated(bb.stan),]
bb.stan<-na.omit(bb.stan)
bb.stan<-bb.stan[sample(nrow(bb.stan), 10000), ]
bb.stan$nao.z <- (bb.stan$m.index-mean(bb.stan$m.index,na.rm=TRUE))/sd(bb.stan$m.index,na.rm=TRUE)
bb.stan$mat.z <- (bb.stan$sp.temp-mean(bb.stan$sp.temp,na.rm=TRUE))/sd(bb.stan$sp.temp,na.rm=TRUE)
bb.stan$cc.z <- (bb.stan$cc-mean(bb.stan$cc,na.rm=TRUE))/sd(bb.stan$cc,na.rm=TRUE)
bb.stan$elev.z <- (bb.stan$sm.elev-mean(bb.stan$sm.elev,na.rm=TRUE))/sd(bb.stan$sm.elev,na.rm=TRUE)
bb.stan$space.z <- (bb.stan$space.z-mean(bb.stan$space.z,na.rm=TRUE))/sd(bb.stan$space.z,na.rm=TRUE)
bb.stan$space.z <- (bb.stan$space-mean(bb.stan$space,na.rm=TRUE))/sd(bb.stan$space,na.rm=TRUE)
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/cen_rndslopes.Rdata")
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/cen_rndslopes.Rdata")
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/cen_rndint.Rdata")
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/brm_rndslopes.Rdata")
cen_rndslopes
brm.full.nointer
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/cen_rndslopes.Rdata")
brm.full.nointer
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/cen_rndint.Rdata")
brm.full.nointer
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/cen_rndslopes.Rdata")
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# dostan = TRUE
library(rstan)
library(ggplot2)
library(shinystan)
#library(bayesplot)
library(rstanarm)
library(brms)
library(ggstance)
#library(forcats)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("danflynn", getwd())>0)) {
setwd("~/Documents/git/ospree")
} else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses")
if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses")
} else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses")
setwd("~/Documents/git/ospree/analyses")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
########################
#### get the data
source("lat_analysis/source/bbdataplease.R")
## (2) Deal with species
dim(bb.noNA)
d <- bb.noNA
source("lat_analysis/source/speciescomplex.R")
bb.noNA.wtaxa <- d
dim(bb.noNA.wtaxa)
unique(bb.noNA.wtaxa$complex)
# merge in labgroup (we could do this elsewhere someday)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>2)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
bb.wlab<-bb.wlab.photo
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum", "Ulmus_complex")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
studies<-dplyr::select(bb.wlab, datasetID, complex)
studies<-studies[!duplicated(studies),]
studies<-within(studies, { studies <- ave(datasetID, complex, FUN=function(x) length(unique(x)))})
studies<-dplyr::select(studies, -datasetID)
studies<-studies[!duplicated(studies),]
columnstokeep <- c("datasetID", "genus", "species", "varetc", "woody", "forcetemp",
"photoperiod_day", "response", "response.time", "Total_Utah_Model",
"complex", "provenance.lat")
bb.wlab.sm <- subset(bb.wlab, select=columnstokeep)
## make a bunch of things numeric (eek!)
bb.wlab.sm$force <- as.numeric(bb.wlab.sm$forcetemp)
bb.wlab.sm$photo <- as.numeric(bb.wlab.sm$photoperiod_day)
bb.wlab.sm$chill <- as.numeric(bb.wlab.sm$Total_Utah_Model)
bb.wlab.sm$resp <- as.numeric(bb.wlab.sm$response.time)
bb.wlab.sm$lat<-as.numeric(bb.wlab.sm$provenance.lat)
## subsetting data, preparing genus variable, removing NAs
ospr.prepdata <- subset(bb.wlab.sm, select=c("resp", "chill", "photo", "force", "complex", "lat", "datasetID"))
dim(subset(bb.wlab.sm, is.na(chill)==FALSE & is.na(photo)==FALSE & is.na(force)==FALSE
& is.na(lat)==FALSE & is.na(datasetID)==FALSE))
ospr.stan <- ospr.prepdata[complete.cases(ospr.prepdata),]
ospr.stan$sp <- as.numeric(as.factor(ospr.stan$complex))
## Center? or Z-score?
ospr.stan$sm.chill<-ospr.stan$chill/240
## center the predictors:
#ospr.stan$force.cen <- ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.cen <- ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.cen <- ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.cen <- ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE)
## z-score the predictors:
#ospr.stan$force.z <- (ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE))/sd(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.z <- (ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE))/sd(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.z <- (ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE))/sd(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.z <- (ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE))/sd(ospr.stan$lat,na.rm=TRUE)
ospr.stan <- subset(ospr.stan, resp<600)
lat.inter_brm<-brm(resp~ force + photo + sm.chill + lat + photo:lat + force:photo + force:sm.chill +
photo:sm.chill + force:lat +
(force + photo + sm.chill + lat|sp), data=ospr.stan)
lat.inter_brm
pp_check(lat.inter_brm)
lat.inter_brm<-brm(resp~ force + photo + sm.chill + lat + photo:lat + force:photo + force:sm.chill +
photo:sm.chill +
(force + photo + sm.chill + lat|sp), data=ospr.stan)
lat.inter_brm
lat.inter_brm<-brm(resp~ force + photo + sm.chill + lat + photo:lat +
(force + photo + sm.chill + lat + photo:lat|sp), data=ospr.stan)
lat.inter_brm
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum")
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>2)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
bb.wlab<-bb.wlab.photo
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
studies<-dplyr::select(bb.wlab, datasetID, complex)
studies<-studies[!duplicated(studies),]
studies<-within(studies, { studies <- ave(datasetID, complex, FUN=function(x) length(unique(x)))})
studies<-dplyr::select(studies, -datasetID)
studies<-studies[!duplicated(studies),]
columnstokeep <- c("datasetID", "genus", "species", "varetc", "woody", "forcetemp",
"photoperiod_day", "response", "response.time", "Total_Utah_Model",
"complex", "provenance.lat")
bb.wlab.sm <- subset(bb.wlab, select=columnstokeep)
## make a bunch of things numeric (eek!)
bb.wlab.sm$force <- as.numeric(bb.wlab.sm$forcetemp)
bb.wlab.sm$photo <- as.numeric(bb.wlab.sm$photoperiod_day)
bb.wlab.sm$chill <- as.numeric(bb.wlab.sm$Total_Utah_Model)
bb.wlab.sm$resp <- as.numeric(bb.wlab.sm$response.time)
bb.wlab.sm$lat<-as.numeric(bb.wlab.sm$provenance.lat)
## subsetting data, preparing genus variable, removing NAs
ospr.prepdata <- subset(bb.wlab.sm, select=c("resp", "chill", "photo", "force", "complex", "lat", "datasetID"))
dim(subset(bb.wlab.sm, is.na(chill)==FALSE & is.na(photo)==FALSE & is.na(force)==FALSE
& is.na(lat)==FALSE & is.na(datasetID)==FALSE))
ospr.stan <- ospr.prepdata[complete.cases(ospr.prepdata),]
ospr.stan$sp <- as.numeric(as.factor(ospr.stan$complex))
## Center? or Z-score?
ospr.stan$sm.chill<-ospr.stan$chill/240
## center the predictors:
#ospr.stan$force.cen <- ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.cen <- ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.cen <- ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.cen <- ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE)
## z-score the predictors:
#ospr.stan$force.z <- (ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE))/sd(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.z <- (ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE))/sd(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.z <- (ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE))/sd(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.z <- (ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE))/sd(ospr.stan$lat,na.rm=TRUE)
ospr.stan <- subset(ospr.stan, resp<600)
lat.inter_brm<-brm(resp~ force + photo + sm.chill + lat + photo:lat +
(force + photo + sm.chill + lat + photo:lat|sp), data=ospr.stan, control = list(max_treedepth = 12,adapt_delta = 0.99))
lat.inter_brm
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>2)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
bb.wlab<-bb.wlab.photo
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum", "Ulmus_complex")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
studies<-dplyr::select(bb.wlab, datasetID, complex)
studies<-studies[!duplicated(studies),]
studies<-within(studies, { studies <- ave(datasetID, complex, FUN=function(x) length(unique(x)))})
studies<-dplyr::select(studies, -datasetID)
studies<-studies[!duplicated(studies),]
columnstokeep <- c("datasetID", "genus", "species", "varetc", "woody", "forcetemp",
"photoperiod_day", "response", "response.time", "Total_Utah_Model",
"complex", "provenance.lat")
bb.wlab.sm <- subset(bb.wlab, select=columnstokeep)
## make a bunch of things numeric (eek!)
bb.wlab.sm$force <- as.numeric(bb.wlab.sm$forcetemp)
bb.wlab.sm$photo <- as.numeric(bb.wlab.sm$photoperiod_day)
bb.wlab.sm$chill <- as.numeric(bb.wlab.sm$Total_Utah_Model)
bb.wlab.sm$resp <- as.numeric(bb.wlab.sm$response.time)
bb.wlab.sm$lat<-as.numeric(bb.wlab.sm$provenance.lat)
## subsetting data, preparing genus variable, removing NAs
ospr.prepdata <- subset(bb.wlab.sm, select=c("resp", "chill", "photo", "force", "complex", "lat", "datasetID"))
dim(subset(bb.wlab.sm, is.na(chill)==FALSE & is.na(photo)==FALSE & is.na(force)==FALSE
& is.na(lat)==FALSE & is.na(datasetID)==FALSE))
ospr.stan <- ospr.prepdata[complete.cases(ospr.prepdata),]
ospr.stan$sp <- as.numeric(as.factor(ospr.stan$complex))
## Center? or Z-score?
ospr.stan$sm.chill<-ospr.stan$chill/240
## center the predictors:
#ospr.stan$force.cen <- ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.cen <- ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.cen <- ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.cen <- ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE)
## z-score the predictors:
#ospr.stan$force.z <- (ospr.stan$force-mean(ospr.stan$force,na.rm=TRUE))/sd(ospr.stan$force,na.rm=TRUE)
#ospr.stan$photo.z <- (ospr.stan$photo-mean(ospr.stan$photo,na.rm=TRUE))/sd(ospr.stan$photo,na.rm=TRUE)
#ospr.stan$chill.z <- (ospr.stan$chill-mean(ospr.stan$chill,na.rm=TRUE))/sd(ospr.stan$chill,na.rm=TRUE)
#ospr.stan$lat.z <- (ospr.stan$lat-mean(ospr.stan$lat,na.rm=TRUE))/sd(ospr.stan$lat,na.rm=TRUE)
ospr.stan <- subset(ospr.stan, resp<600)
View(ospr.stan)
unique(ospr.stan$complex)
# merge in labgroup (we could do this elsewhere someday)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>2)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
bb.wlab<-bb.wlab.photo
unique(bb.wlab$complex)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>1)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
bb.wlab<-bb.wlab.photo
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum", "Ulmus_complex")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
unique(ospr.stan$complex)
setwd("~/Documents/git/ospree/analyses")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
########################
#### get the data
source("lat_analysis/source/bbdataplease.R")
## (2) Deal with species
dim(bb.noNA)
d <- bb.noNA
source("lat_analysis/source/speciescomplex.R")
bb.noNA.wtaxa <- d
dim(bb.noNA.wtaxa)
unique(bb.noNA.wtaxa$complex)
# merge in labgroup (we could do this elsewhere someday)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>1)
bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
tt
bb.wlab<-bb.wlab.photo
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum", "Ulmus_complex")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
studies<-dplyr::select(bb.wlab, datasetID, complex)
studies<-studies[!duplicated(studies),]
studies<-within(studies, { studies <- ave(datasetID, complex, FUN=function(x) length(unique(x)))})
studies<-dplyr::select(studies, -datasetID)
studies<-studies[!duplicated(studies),]
columnstokeep <- c("datasetID", "genus", "species", "varetc", "woody", "forcetemp",
"photoperiod_day", "response", "response.time", "Total_Utah_Model",
"complex", "provenance.lat")
bb.wlab.sm <- subset(bb.wlab, select=columnstokeep)
## make a bunch of things numeric (eek!)
bb.wlab.sm$force <- as.numeric(bb.wlab.sm$forcetemp)
bb.wlab.sm$photo <- as.numeric(bb.wlab.sm$photoperiod_day)
bb.wlab.sm$chill <- as.numeric(bb.wlab.sm$Total_Utah_Model)
bb.wlab.sm$resp <- as.numeric(bb.wlab.sm$response.time)
bb.wlab.sm$lat<-as.numeric(bb.wlab.sm$provenance.lat)
## subsetting data, preparing genus variable, removing NAs
ospr.prepdata <- subset(bb.wlab.sm, select=c("resp", "chill", "photo", "force", "complex", "lat", "datasetID"))
dim(subset(bb.wlab.sm, is.na(chill)==FALSE & is.na(photo)==FALSE & is.na(force)==FALSE
& is.na(lat)==FALSE & is.na(datasetID)==FALSE))
ospr.stan <- ospr.prepdata[complete.cases(ospr.prepdata),]
ospr.stan$sp <- as.numeric(as.factor(ospr.stan$complex))
## Center? or Z-score?
ospr.stan$sm.chill<-ospr.stan$chill/240
ospr.stan <- subset(ospr.stan, resp<600)
unique(ospr.stan$complex)
write.csv(ospr.stan, file="~/Documents/git/ospree/analyses/lat_analysis/lat_output/lat_wRibesandUlmus.csv", row.names = FALSE)
load("/Users/CatherineChamberlain/Desktop/lat_allinters.Rdata")
load("/Users/CatherineChamberlain/Desktop/lat_photolat.Rdata")
lat.brm
lat.inter_brm
rm(list=ls())
options(stringsAsFactors = FALSE)
# dostan = TRUE
library(rstan)
library(ggplot2)
library(shinystan)
#library(bayesplot)
library(rstanarm)
library(brms)
library(ggstance)
#library(forcats)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("danflynn", getwd())>0)) {
setwd("~/Documents/git/ospree")
} else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses")
if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses")
} else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses")
setwd("~/Documents/git/ospree/analyses")
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
########################
#### get the data
source("lat_analysis/source/bbdataplease.R")
## (2) Deal with species
dim(bb.noNA)
d <- bb.noNA
source("lat_analysis/source/speciescomplex.R")
bb.noNA.wtaxa <- d
dim(bb.noNA.wtaxa)
unique(bb.noNA.wtaxa$complex)
# merge in labgroup (we could do this elsewhere someday)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>2)
#bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
#bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab.photo$complex)### testing
#bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
#bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab$complex)### testing
tt
# merge in labgroup (we could do this elsewhere someday)
bb.wlab <- merge(bb.resp, taxon, by=c("genus","species"), all.x=TRUE)
bb.wlab <- within(bb.wlab, { prov.lat <- ave(provenance.lat, complex, FUN=function(x) length(unique(x)))}) # multiple provenance.lats
bb.wlab <- subset(bb.wlab, bb.wlab$prov.lat>1)
#bb.wlab.photo<- within(bb.wlab, { photo <- ave(photoperiod_day, complex, FUN=function(x) length(unique(x)))}) # multiple photoperiods
#bb.wlab.photo <- subset(bb.wlab.photo, bb.wlab.photo$photo>1)
tt <- table(bb.wlab$complex)### testing
tt
# [1] "Betula_complex"        "Betula_pendula"        "Betula_pubescens"      "Fagus_sylvatica"
# [5] "Malus_domestica"       "Picea_abies"           "Picea_glauca"          "Pseudotsuga_menziesii"
# [9] "Ribes_nigrum"          "Ulmus_complex"
myspp<-c("Betula_pendula", "Betula_pubescens", "Fagus_sylvatica", "Picea_abies", "Pseudotsuga_menziesii", "Ribes_nigrum", "Ulmus_complex")
bb.wlab<-dplyr::filter(bb.wlab, complex%in%myspp)
studies<-dplyr::select(bb.wlab, datasetID, complex)
studies<-studies[!duplicated(studies),]
studies<-within(studies, { studies <- ave(datasetID, complex, FUN=function(x) length(unique(x)))})
studies<-dplyr::select(studies, -datasetID)
studies<-studies[!duplicated(studies),]
columnstokeep <- c("datasetID", "genus", "species", "varetc", "woody", "forcetemp",
"photoperiod_day", "response", "response.time", "Total_Utah_Model",
"complex", "provenance.lat")
bb.wlab.sm <- subset(bb.wlab, select=columnstokeep)
## make a bunch of things numeric (eek!)
bb.wlab.sm$force <- as.numeric(bb.wlab.sm$forcetemp)
bb.wlab.sm$photo <- as.numeric(bb.wlab.sm$photoperiod_day)
bb.wlab.sm$chill <- as.numeric(bb.wlab.sm$Total_Utah_Model)
bb.wlab.sm$resp <- as.numeric(bb.wlab.sm$response.time)
bb.wlab.sm$lat<-as.numeric(bb.wlab.sm$provenance.lat)
## subsetting data, preparing genus variable, removing NAs
ospr.prepdata <- subset(bb.wlab.sm, select=c("resp", "chill", "photo", "force", "complex", "lat", "datasetID"))
dim(subset(bb.wlab.sm, is.na(chill)==FALSE & is.na(photo)==FALSE & is.na(force)==FALSE
& is.na(lat)==FALSE & is.na(datasetID)==FALSE))
ospr.stan <- ospr.prepdata[complete.cases(ospr.prepdata),]
ospr.stan$sp <- as.numeric(as.factor(ospr.stan$complex))
## Center? or Z-score?
ospr.stan$sm.chill<-ospr.stan$chill/240
ospr.stan <- subset(ospr.stan, resp<600)
check<-read.csv("/lat_analysis/lat_output/lat_wRibesandUlmus.csv", header=TRUE)
check<-read.csv("analyses/lat_analysis/lat_output/lat_wRibesandUlmus.csv", header=TRUE)
check<-read.csv("~/Documents/git/ospree/analyses/lat_analysis/lat_output/lat_wRibesandUlmus.csv", header=TRUE)
